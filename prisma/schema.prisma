generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model Word {
    id             Int             @id @default(autoincrement())
    text           String          @unique
    createdAt      DateTime        @default(now())
    updatedAt      DateTime        @updatedAt
    unfamiliarWord UnfamiliarWord?
    examples       WordExample[]
}

model UnfamiliarWord {
    id                         Int              @id @default(autoincrement())
    word                       Word             @relation(fields: [wordId], references: [id])
    wordId                     Int              @unique
    meaningFamiliarLevel       Int
    pronunciationFamiliarLevel Int
    status                     UnfamiliarStatus
    createdAt                  DateTime         @default(now())
    updatedAt                  DateTime         @updatedAt

    @@index([createdAt(sort: Desc)])
}

enum UnfamiliarType {
    Meaning
    Pronunciation
}

enum UnfamiliarStatus {
    Learning
    Mastered
}

model Example {
    id          Int           @id @default(autoincrement())
    text        String
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
    WordExample WordExample[]
}

model WordExample {
    id        Int      @id @default(autoincrement())
    word      Word     @relation(fields: [wordId], references: [id])
    wordId    Int
    example   Example  @relation(fields: [exampleId], references: [id])
    exampleId Int
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([wordId, exampleId])
}
