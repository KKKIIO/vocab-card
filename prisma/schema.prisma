generator client {
    provider      = "prisma-client-js"
    binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL") // uses connection pooling
}

model Card {
    id                  Int                  @id @default(autoincrement())
    text                String
    videoUrl            String               @default("")
    imageUrl            String               @default("")
    lastReviewedAt      DateTime             @default(now())
    createdAt           DateTime             @default(now())
    updatedAt           DateTime             @updatedAt
    wordMeaningExamples WordMeaningExample[]
}

model Word {
    id                 Int                 @id @default(autoincrement())
    text               String              @unique
    createdAt          DateTime            @default(now())
    updatedAt          DateTime            @updatedAt
    wordMeanings       WordMeaning[]
    wordPronunciations WordPronunciation[]
}

model WordMeaning {
    id                  Int                  @id @default(autoincrement())
    explanation         String
    wordId              Int
    word                Word                 @relation(fields: [wordId], references: [id])
    learnStatus         LearnStatus
    createdAt           DateTime             @default(now())
    updatedAt           DateTime             @updatedAt
    wordMeaningExamples WordMeaningExample[]
}

model WordPronunciation {
    id          Int         @id @default(autoincrement())
    alphabet    String
    wordId      Int
    word        Word        @relation(fields: [wordId], references: [id])
    learnStatus LearnStatus
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}

enum LearnStatus {
    Learning
    Mastered
}

model WordMeaningExample {
    id            Int         @id @default(autoincrement())
    wordMeaningId Int
    wordMeaning   WordMeaning @relation(fields: [wordMeaningId], references: [id])
    cardId        Int
    card          Card        @relation(fields: [cardId], references: [id])
    createdAt     DateTime    @default(now())
    updatedAt     DateTime    @updatedAt
}
